/* Generated By:JJTree: Do not edit this line. ASTLogicalExp.java */

package wvustat.math.expression;

public class ASTLogicalExp extends Expression{
    private String operator = null;

    public ASTLogicalExp(int id) {
	super(id);
    }

    public ASTLogicalExp(ExpressionParser p, int id) {
	super(p, id);
    }

    public int getReturnType(){
	return Expression.BOOLEAN;
    }

    public void setOperator(String op){
	operator = op;
	//System.out.println("Set operator: " + op);
    }

    public String getOperator(){
	return operator;
    }

    public Object getValue() throws ExecError{
	return new Boolean(getBooleanValue());
    }

    public boolean getBooleanValue() throws ExecError{
	boolean op1 = ((Expression)jjtGetChild(0)).getBooleanValue();
	boolean op2 = ((Expression)jjtGetChild(1)).getBooleanValue();

	if("&&".equals(operator))
	    return (op1 && op2);
	else if("||".equals(operator))
	    return (op1 || op2);
	else
	    throw new ExecError("Unsupport operator: " + operator);
    }

    public double getDoubleValue() throws ExecError{
	boolean bValue = getBooleanValue();

	return (bValue)?(1.0):(0.0);
    }

    public String toString(){
	return "(" + jjtGetChild(0).toString() + ") " + operator + " (" +
	    jjtGetChild(1).toString() + ")";
    }
    
    public String derivativeString(String symbol) throws ExecError{
    	throw new ExecError("Can not take derivative of this function!");
    }
}
